#!/usr/bin/env Rscript

# Author:   David J. H. Shih  <djh.shih@gmail.com>
# Date:     2021-01-20
# Version:  0.3
# License:  MIT


# PREAMBLE

if (!suppressWarnings(require(argparser, quietly=TRUE))) {
	install.packages("argparser");
	library("argparser", quietly=TRUE);
}

descriptions <- list(
	install = "Install packages",
	uninstall = "Uninstall packages",
	upgrade = "Upgrade installed packages or installer",
	extract = "Extract requirements from scripts",
	help = "Show help message for a command"
);
commands <- names(descriptions);

args <- commandArgs(trailingOnly=TRUE);


# FUNCTIONS

print_help <- function(exit=TRUE) {
	cat("usage: rip <command> [options]\n\n");
	cat("commands:\n\n  ");
	cat(
		paste(
			unlist(mapply( function(x, y)
				sprintf("%s%s", format(x, width=12), y), commands, unlist(descriptions)
			)),
			collapse="\n  "
		),
		"\n\n"
	);
	if (exit) quit();
}

get_packages <- function(argv, throw=FALSE) {
	if (length(argv$packages) > 1 || !is.na(argv$packages)) {
		packages <- argv$packages;
	} else if (!is.na(argv$requirement) && file.exists(argv$requirement)) {
		packages <- readLines(argv$requirement);
	} else if (throw) {
		if (any(c("-r", "--requirements") %in% commandArgs())) {
			stop("The file ", argv$requirement, " does not exists or cannot be read")	
		} else {
			stop("Either --packages or --requirements must be specified")
		}
	}

	packages
}

# load bioconductor installer
load_installer <- function() {
	version.num <- as.numeric(version$major) + 0.1*as.numeric(version$minor);
	if (version.num < 3.5) {
		stop("Please use rip version 0.2 for R version < 3.5");
	} else {
		if (!requireNamespace("BiocManager", quietly=TRUE)) {
			install.packages("BiocManager");
		}
	}
}

extract_requirements <- function(files) {
	lines <- unlist(lapply(files, readLines, warn=FALSE));
	idx <- grepl("^\\w*library([^)]+)", lines);
	lines.lib <- lines[idx];
	libs <- sub("library\\(\"?(.+)\"?\\).*", "\\1", lines.lib);
	unique(libs)
}


# MAIN

if (length(args) < 1) {
	print_help();
} else {
	command <- args[1];
	if (! command %in% commands) {
		print_help(FALSE);
		stop("Invalid command");
	}
}

if (command == "help") {

	pr <- arg_parser(descriptions$help);
	pr <- add_argument(pr, "command", "command to inquire");

	argv <- parse_args(pr, args[-1]);

	command <- argv$command;
	args <- c(command, "--help");

}

if (command == "install") {

	pr <- arg_parser(descriptions$install);
	pr <- add_argument(pr, "--packages", "R package names on CRAN or Bioconductor", nargs=Inf);
	pr <- add_argument(pr, "--requirements", "package list file with one package per line", default="requirements.txt");
	pr <- add_argument(pr, "--upgrade", "upgrade all specified packages to newest version", flag=TRUE);

	argv <- parse_args(pr, args[-1]);

	packages <- get_packages(argv, throw=TRUE);

	load_installer();

	for (package in packages) {
		if (argv$upgrade ||
				!suppressWarnings(require(package, character.only=TRUE, quietly=TRUE,
					warn.conflicts=FALSE))
		) {
			BiocManager::install(package, ask=FALSE);
		}	else {
			cat("\n", package, "is already installed\n");
		}
	}

} else if (command == "uninstall") {

	pr <- arg_parser(descriptions$uninstall);
	pr <- add_argument(pr, "--packages", "R package names on CRAN or Bioconductor", nargs=Inf);
	pr <- add_argument(pr, "--requirements", "package list file with one package per line", default=NA);

	argv <- parse_args(pr, args[-1]);

	packages <- get_packages(argv, throw=TRUE);

	remove.packages(packages);
	
} else if (command == "upgrade") {

	pr <- arg_parser(descriptions$upgrade);
	pr <- add_argument(pr, "--installer", "upgrade installer", flag=TRUE);

	argv <- parse_args(pr, args[-1]);

	load_installer();

	if (argv$installer) {
		update.packages("BiocManager");
	} else {
		BiocManager::install(ask=FALSE);
	}

} else if (command == "extract") {

	pr <- arg_parser(descriptions$extract);
	pr <- add_argument(pr, "--scripts", "R scripts", nargs=Inf);
	
	argv <- parse_args(pr, args[-1]);
	
	if (length(argv$scripts) == 1 && is.na(argv$scripts)) {
		message("At least one R script is required.")
	} else {
		libs <- extract_requirements(argv$scripts);
		cat(libs, sep="\n")
	}

} else {

	stop("Invalid command");

}

